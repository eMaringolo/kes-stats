Class {
	#name : 'KesStaticMemoryConsumption',
	#superclass : 'AbtObservableObject',
	#instVars : [
		'children',
		'name',
		'total',
		'baseObject',
		'isIncluded',
		'parent',
		'canBeDeleted'
	],
	#category : 'KesMemoryTools'
}

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption class >> baseObject: baseObject application: application [

	^self subclassResponsibility
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption class >> baseObject: baseObject parent: parent [

	^(self new)
		parent: parent;
		baseObject: baseObject;
		yourself
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_baseObject [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Integer;
		 setSelector: #baseObject:;
		 getSelector: #baseObject;
		 changeSymbol: #baseObject)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_children [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: KesStaticMemoryConsumption;
		 getSelector: #children;
		 changeSymbol: #children)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_hasChildren [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##( AbtAttributeSpec new
		attributeType: Boolean;
		getSelector: #hasChildren;
		changeSymbol: #hasChildren)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_includedTotal [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##( AbtAttributeSpec new
		attributeType: Integer;
		getSelector: #includedTotal;
		changeSymbol: #includedTotal)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_includedTotalDisplayValue [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##( AbtAttributeSpec new
		attributeType: Integer;
		getSelector: #includedTotalDisplayValue;
		changeSymbol: #includedTotalDisplayValue)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_instanceInterfaceSpec [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #hasChildren put: self IS_hasChildren;
		featureNamed: #children put: self IS_children;
		featureNamed: #includedTotalDisplayValue put: self IS_includedTotalDisplayValue;
		featureNamed: #includedTotal put: self IS_includedTotal;
		featureNamed: #name put: self IS_name;
		featureNamed: #total put: self IS_total;
		featureNamed: #baseObject put: self IS_baseObject;
		featureNamed: #isIncluded put: self IS_isIncluded;
		featureNamed: #memoryType put: self IS_memoryType
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_isIncluded [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Boolean;
		 getSelector: #isIncluded;
		 changeSymbol: #isIncluded)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_memoryType [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: String;
		 getSelector: #memoryType;
		 changeSymbol: #memoryType)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_name [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: String;
		 setSelector: #name:;
		 getSelector: #name;
		 changeSymbol: #name)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> IS_total [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##( AbtAttributeSpec new
		attributeType: Integer;
		getSelector: #total;
		changeSymbol: #total)
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption class >> memoryType [

	^self subclassResponsibility
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption class >> new [

	^(super new)
		initialize;
		yourself
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> <= mm [

	^self name < mm name
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> ancestors [
	| tempParent ancestors |

	ancestors := Set new.

	tempParent := self parent.
	[tempParent notNil] whileTrue: [
		ancestors add: tempParent.
		tempParent := tempParent parent].

	^ancestors
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> baseObject [

	^baseObject
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> baseObject: newBaseObject [

	baseObject := newBaseObject.

	self refresh
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> canBeDeleted [

	^(canBeDeleted and: [self parent isNil])
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> canBeDeleted: bool [

	canBeDeleted := bool
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> childRefreshed [

]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> children [

	^children
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> children: anOrderedCollection [

	children := anOrderedCollection asSortedCollection.
	self signalEvent: #children with: anOrderedCollection
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> descendants [

	^self children
		inject: OrderedCollection new
		into: [:coll :child |
			coll add: child.
			coll addAll: child descendants.
			coll]
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> hasChildren [

	^self children notEmpty
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> includedTotal [

	^(self isIncluded and: [self baseObject notNil])
		ifTrue: [self total]
		ifFalse: [0]
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> includedTotalDisplayValue [

	^(self isIncluded and: [self baseObject notNil])
		ifTrue: [self total]
		ifFalse: [nil]
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> initialize [

	self
		children: #();
		total: 0;
		isIncluded: true;
		canBeDeleted: true
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> isIncluded [

	^isIncluded
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> isIncluded: bool [

	isIncluded := bool.
	self children do: [:f| f isIncluded: bool].
	self refreshParent.

	self
		signalEvent: #isIncluded;
		signalEvent: #includedTotal;
		signalEvent: #includedTotalDisplayValue;
		signalEvent: #type

]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> memoryType [

	^self baseObject notNil
		ifTrue: [
			self isIncluded
				ifTrue: [self class memoryType]
				ifFalse: ['Excluded']]
		ifFalse: ['Missing']
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> name [

	^name
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> name: aString [

	name := aString.
	self signalEvent: #name with: aString
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> openBaseObject [

	self baseObject notNil
		ifTrue: [self baseObject browse]
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> parent [

	^parent
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> parent: nouveauParent [

	parent := nouveauParent
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> primBaseObject: newBaseObject [

	baseObject := newBaseObject.

]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> primName: aString [

	name := aString
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> printOn: stream [

	stream
		nextPutAll: self baseObject printString;
		nextPutAll: ', total = ', self total printString
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> refresh [

	self total: 0
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> refreshForView: view [

	view refreshElement: self.
	self children do: [:f| f refreshForView: view]
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> refreshMethods: boolean [

]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> refreshParent [

	self parent notNil
		ifTrue: [
			self parent
				childRefreshed;
				refreshParent]

]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> searchForChildNamed: childName [

	| coll |

	coll := OrderedCollection new.
	(childName match: self name)
		ifTrue: [coll add: self].
	self children do: [:f | coll addAll: (f searchForChildNamed: childName)].

	^coll
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> searchForChildrenOfSubclasses: subclasses [
	| coll |

	coll := OrderedCollection new.
	self children do: [:f | coll addAll: (f searchForChildrenOfSubclasses: subclasses)].

	^coll
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumption >> total [

	^total
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumption >> total: anInteger [

	total := anInteger.
	self
		signalEvent: #total;
		signalEvent: #includedTotal;
		signalEvent: #includedTotalDisplayValue
]
