Class {
	#name : 'KesStaticMemoryConsumptionMeasure',
	#superclass : 'AbtObservableObject',
	#instVars : [
		'applications',
		'description',
		'configurationMaps',
		'filename',
		'applicationMeasures',
		'configurationMapMeasures'
	],
	#category : 'KesMemoryTools'
}

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure class >> IS_delete [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 selector: #delete)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure class >> IS_description [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##( AbtAttributeSpec new
		attributeType: String;
		setSelector: #description:;
		getSelector: #description;
		changeSymbol: #description)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure class >> IS_filename [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##( AbtAttributeSpec new
		attributeType: String;
		setSelector: #filename:;
		getSelector: #filename;
		changeSymbol: #filename)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure class >> IS_instanceInterfaceSpec [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #delete put: self IS_delete;
		featureNamed: #measures put: self IS_measures;
		featureNamed: #removeElement put: self IS_removeElement;
		featureNamed: #saveIntoFilenamed put: self IS_saveIntoFilenamed;
		featureNamed: #description put: self IS_description;
		featureNamed: #filename put: self IS_filename
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure class >> IS_measures [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: OrderedCollection;
		 getSelector: #measures;
		 changeSymbol: #measures)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure class >> IS_removeElement [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 add: (AbtParameterSpec new parameterType: KesStaticMemoryConsumption; parameterName: 'element');
			 yourself);
		 selector: #removeElement:)
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure class >> IS_saveIntoFilenamed [
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 add: (AbtParameterSpec new parameterType: String; parameterName: 'newFilename');
			 yourself);
		 selector: #saveIntoFilenamed:)
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure class >> loadFromFilename: filename [

	| staticMemoryConsumptionMeasure stream loader |

	loader := ObjectLoader new.
	stream := CfsReadFileStream open: filename.

	stream isCfsError
		ifTrue: [
			System errorMessage: ('%1: %2' bindWith: filename with: stream message).
			^nil].

	stream isBytes: true.

	staticMemoryConsumptionMeasure := loader loadFromStream: stream.
	stream close.

	staticMemoryConsumptionMeasure isNil
		ifTrue: [System errorMessage: loader currentErrorString].

	^staticMemoryConsumptionMeasure
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure class >> new [

	^(super new)
		initialize;
		yourself
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> addApplication: app [

	self applications add: app.
	applicationMeasures := nil.

	self signalEvent: #measures
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> addApplicationMeasures: measures [

	applicationMeasures addAll: measures.
	self signalEvent: #measures
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> addConfigurationMap: map [

	self configurationMaps add: map.
	configurationMapMeasures := nil.

	self signalEvent: #measures
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> applications [

	^applications
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure >> applications: anOrderedCollection [

	applications := anOrderedCollection.
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> configurationMaps [

	^configurationMaps
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure >> configurationMaps: anOrderedCollection [

	configurationMaps := anOrderedCollection
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> delete [

	self filename notNil
		ifTrue: [
			CfsFileDescriptor remove: self filename.
			self filename: nil].
	self
		initialize;
		signalEvent: #measures
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> description [

	^description
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure >> description: aString [

	description := aString.
	self signalEvent: #description with: aString
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> filename [

	^filename
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure >> filename: aString [

	filename := aString.
	self
		signalEvent: #filename
		with: aString
]

{ #category : 'KES-Tools',
  #vaVisibility : 'private' }
KesStaticMemoryConsumptionMeasure >> initialize [

	applications := OrderedCollection new.
	configurationMaps := OrderedCollection new.
	description := 'New Measure'.
	configurationMapMeasures := applicationMeasures := nil.
	filename := '*.MEM'
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> measures [

	configurationMapMeasures isNil
		ifTrue: [configurationMapMeasures := self configurationMaps collect: [:cm | cm kesStaticMemoryConsumption]].
	applicationMeasures isNil
		ifTrue: [applicationMeasures := self applications collect: [:app | app kesStaticMemoryConsumption]].

	^configurationMapMeasures , applicationMeasures
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> removeApplication: app [

	self applications remove: app.
	applicationMeasures := nil.

	self signalEvent: #measures
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> removeConfigurationMap: map [

	self configurationMaps remove: map.
	configurationMapMeasures := nil.

	self signalEvent: #measures
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> removeElement: element [

	(self configurationMaps includes: element)
		ifTrue: [^self removeConfigurationMap: element].

	(self applications includes: element)
		ifTrue: [^self removeApplication: element].

	ExCLDTObjectNotFound signal
]

{ #category : 'KES-Tools' }
KesStaticMemoryConsumptionMeasure >> saveIntoFilenamed: newFilename [

	| objectDumper stream |

	objectDumper := ObjectDumper new.
	stream := CfsReadWriteFileStream openEmpty: newFilename.
	stream isBytes: true.

	#('eventDependents' 'applicationMeasures' 'configurationMapMeasures')
		do: [:nameVariable |
			objectDumper
				replaceInstVarNamed: nameVariable
				of: self class
				using: nil].

	objectDumper
		unload: self
		intoStream: stream.
	stream close.

	self filename: newFilename.

	^objectDumper
]
